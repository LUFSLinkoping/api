name: Build and deploy ASP.Net Core app to Digitalocean

env:
  DOTNET_VERSION: '6.0'

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Install EF core
        run: dotnet tool install --global dotnet-ef
      
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
        
      - name: copy migrations
        run: cp migrations.sql ${{env.DOTNET_ROOT}}/myapp/migrations.sql
 
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'

    steps:                  
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-
          
      - name: Deploy to Digitalocean
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: '*'
          target: ${{ secrets.TARGET }}
           
      - name: Run migrations
        uses: fifsky/ssh-action@master
        with:
          command: /home/deployer/migrate.sh lufs_api_dev ${{ secrets.TARGET }}/migrations.sql
          host: ${{ secrets.HOST }}
          user: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          
      - name: Restart service
        uses: fifsky/ssh-action@master
        with:
          command: systemctl restart lufs-api-dev.service
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
